{"version":3,"file":"static/js/912.00327452.chunk.js","mappings":"6MAIIA,EAAsB,CAAC,QAChBC,GAAyBC,EAAAA,EAAAA,YAAW,CAACC,EAAOC,IACjCC,EAAAA,cAAoBC,EAAAA,EAAgB,CACtDC,UAAW,YACXC,wBAAyB,OACzBC,0BAA2BT,EAC3BU,uBAAwBC,EAAAA,GACxBC,sBAAuBT,EACvBC,IAAKA,K,0NCNLS,EAAuBA,CAACC,EAAOC,EAASC,EAAUC,KAAeC,EAAAA,EAAAA,IAAoBJ,EAAO,QAASC,EAASE,GAC9GE,EAAmBA,CAACL,EAAOC,EAASC,EAAUC,KAAeG,EAAAA,EAAAA,IAA2BN,EAAO,QAASC,EAASE,GACjHI,EAAuBA,CAACP,EAAOQ,EAAUC,EAASN,KAAeC,EAAAA,EAAAA,IAAoBJ,EAAO,QAASS,EAASN,GAC9GO,EAAmBA,CAACV,EAAOQ,EAAUC,EAASN,KAAeG,EAAAA,EAAAA,IAA2BN,EAAO,QAASS,EAASN,GACjHQ,GAAiBC,EAAAA,EAAAA,IAAe,CAACC,EAAAA,GAAmBd,EAAsBQ,EAAsBF,EAAkBK,GAAmB,CAACI,EAAQC,EAAOC,EAAOC,EAAYC,KACtKC,EAAAA,EAAAA,IAAkBL,EAAQ,UACrBM,EAAAA,EAAAA,IAAkBL,EAAOE,GAAY,IAEvCG,EAAAA,EAAAA,IAAkBJ,EAAOE,GAAY,IAG9C,SAASG,EAAeC,GACtB,MAAqB,SAAdA,EAAKC,IACd,CAUA,IAAIC,GAAiCZ,EAAAA,EAAAA,IAAe,CAACa,EAAAA,GAbpCC,CAACC,EAAQnB,EAAUN,EAAU0B,EAAaC,IAAOA,GAagC,CAACC,EAAgBD,IAAOC,EAAeC,OAAOV,GAAgBW,KAAKC,GAAKA,EAAEJ,KAAOA,IACxKK,GAAmBtB,EAAAA,EAAAA,IAAe,CAACC,EAAAA,GAAmBd,EAAsBQ,EAAsBF,EAAkBK,EAAkBc,EAAgCb,EAAgBwB,EAAAA,IAA4C,CAACrB,EAAQC,EAAOC,EAAOC,EAAYC,EAAYkB,EAAcC,EAAUC,KAClT,IAAI,UACFC,EAAS,eACTC,EAAc,aACdC,GACEH,EACJ,GAAoB,MAAhBF,GAAiC,MAATrB,GAA0B,MAATC,GAA+B,MAAdC,GAAoC,MAAdC,GAA4C,IAAtBD,EAAWyB,QAAsC,IAAtBxB,EAAWwB,QAA4B,MAAZL,EAAhK,CAGA,IAIIM,GAJA,QACFC,EAAO,KACPC,GACET,EAOJ,GAAqB,OAJnBO,EADU,MAARE,GAAgBA,EAAKH,OAAS,EAChBG,EAEc,OAAdN,QAAoC,IAAdA,OAAuB,EAASA,EAAUO,MAAMN,EAAgBC,EAAe,IAKvH,OCgiBK,SAA2BM,GAChC,IAAI,OACFjC,EAAM,MACNC,EAAK,MACLC,EAAK,WACLC,EAAU,WACVC,EAAU,QACV0B,EAAO,SACPP,EAAQ,cACRM,GACEI,EACJ,OAAOJ,EAAcK,IAAI,CAACC,EAAOC,KAE/B,IAAIC,GAAQC,EAAAA,EAAAA,IAAkBH,EAAOL,GACrC,GAAe,eAAX9B,EASF,MAAO,CACLmB,GATOoB,EAAAA,EAAAA,IAAwB,CAC/BC,KAAMvC,EACNwC,MAAOtC,EACPoB,WACAY,QACAC,UAKAM,GAHOC,EAAAA,EAAAA,IAAUN,GAAS,KAAOnC,EAAM0C,MAAMP,GAI7CA,QACAQ,QAASV,GAGb,IAAIhB,GAAIwB,EAAAA,EAAAA,IAAUN,GAAS,KAAOpC,EAAM2C,MAAMP,GAC1CK,GAAIH,EAAAA,EAAAA,IAAwB,CAC9BC,KAAMtC,EACNuC,MAAOrC,EACPmB,WACAY,QACAC,UAEF,OAAS,MAALjB,GAAkB,MAALuB,EACR,KAEF,CACLvB,IACAuB,IACAL,QACAQ,QAASV,KAEVlB,OAAO6B,QACZ,CDhlBSC,CAAkB,CACvB/C,SACAC,QACAC,QACAC,aACAC,aACA0B,UACAP,WACAM,iBAtBF,I,wFCtCEmB,EAAY,CAAC,MACfC,EAAa,CAAC,OAAQ,SAAU,eAAgB,YAChDC,EAAa,CAAC,YAAa,mBAAoB,iBAAkB,oBAAqB,kBAAmB,eAAgB,MAAO,OAAQ,oBAAqB,QAAS,aAAc,UAAW,UAAW,MAC5M,SAASC,EAAQC,EAAGC,GAAK,IAAIC,EAAIC,OAAOC,KAAKJ,GAAI,GAAIG,OAAOE,sBAAuB,CAAE,IAAIC,EAAIH,OAAOE,sBAAsBL,GAAIC,IAAMK,EAAIA,EAAEzC,OAAO,SAAUoC,GAAK,OAAOE,OAAOI,yBAAyBP,EAAGC,GAAGO,UAAY,IAAKN,EAAEO,KAAKC,MAAMR,EAAGI,EAAI,CAAE,OAAOJ,CAAG,CAC9P,SAASS,EAAcX,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIW,UAAUpC,OAAQyB,IAAK,CAAE,IAAIC,EAAI,MAAQU,UAAUX,GAAKW,UAAUX,GAAK,CAAC,EAAGA,EAAI,EAAIF,EAAQI,OAAOD,IAAI,GAAIW,QAAQ,SAAUZ,GAAKa,GAAgBd,EAAGC,EAAGC,EAAED,GAAK,GAAKE,OAAOY,0BAA4BZ,OAAOa,iBAAiBhB,EAAGG,OAAOY,0BAA0Bb,IAAMH,EAAQI,OAAOD,IAAIW,QAAQ,SAAUZ,GAAKE,OAAOc,eAAejB,EAAGC,EAAGE,OAAOI,yBAAyBL,EAAGD,GAAK,EAAI,CAAE,OAAOD,CAAG,CACtb,SAASc,GAAgBd,EAAGC,EAAGC,GAAK,OAAQD,EAC5C,SAAwBC,GAAK,IAAIgB,EACjC,SAAsBhB,EAAGD,GAAK,GAAI,iBAAmBC,IAAMA,EAAG,OAAOA,EAAG,IAAIF,EAAIE,EAAEiB,OAAOC,aAAc,QAAI,IAAWpB,EAAG,CAAE,IAAIkB,EAAIlB,EAAEqB,KAAKnB,EAAGD,GAAK,WAAY,GAAI,iBAAmBiB,EAAG,OAAOA,EAAG,MAAM,IAAII,UAAU,+CAAiD,CAAE,OAAQ,WAAarB,EAAIsB,OAASC,QAAQtB,EAAI,CADlRuB,CAAavB,EAAG,UAAW,MAAO,iBAAmBgB,EAAIA,EAAIA,EAAI,EAAI,CAD1DQ,CAAezB,MAAOD,EAAIG,OAAOc,eAAejB,EAAGC,EAAG,CAAEhB,MAAOiB,EAAGM,YAAY,EAAImB,cAAc,EAAIC,UAAU,IAAQ5B,EAAEC,GAAKC,EAAGF,CAAG,CAGnL,SAAS6B,GAAyB7B,EAAGE,GAAK,GAAI,MAAQF,EAAG,MAAO,CAAC,EAAG,IAAIM,EAAGL,EAAGiB,EAC9E,SAAuCjB,EAAGD,GAAK,GAAI,MAAQC,EAAG,MAAO,CAAC,EAAG,IAAIC,EAAI,CAAC,EAAG,IAAK,IAAI4B,KAAK7B,EAAG,GAAI,CAAC,EAAE8B,eAAeV,KAAKpB,EAAG6B,GAAI,CAAE,IAAK,IAAM9B,EAAEgC,QAAQF,GAAI,SAAU5B,EAAE4B,GAAK7B,EAAE6B,EAAI,CAAE,OAAO5B,CAAG,CADpH+B,CAA8BjC,EAAGE,GAAI,GAAIC,OAAOE,sBAAuB,CAAE,IAAIyB,EAAI3B,OAAOE,sBAAsBL,GAAI,IAAKC,EAAI,EAAGA,EAAI6B,EAAEtD,OAAQyB,IAAKK,EAAIwB,EAAE7B,IAAK,IAAMC,EAAE8B,QAAQ1B,IAAM,CAAC,EAAE4B,qBAAqBb,KAAKrB,EAAGM,KAAOY,EAAEZ,GAAKN,EAAEM,GAAK,CAAE,OAAOY,CAAG,CAErU,SAASiB,KAAa,OAAOA,GAAWhC,OAAOiC,OAASjC,OAAOiC,OAAOC,OAAS,SAAUP,GAAK,IAAK,IAAI9B,EAAI,EAAGA,EAAIY,UAAUpC,OAAQwB,IAAK,CAAE,IAAIE,EAAIU,UAAUZ,GAAI,IAAK,IAAIC,KAAKC,GAAG,CAAG,GAAE6B,eAAeV,KAAKnB,EAAGD,KAAO6B,EAAE7B,GAAKC,EAAED,GAAK,CAAE,OAAO6B,CAAG,EAAGK,GAASzB,MAAM,KAAME,UAAY,CAyCnR,IAAI0B,GAAmCnH,IACrC,IAAI,QACFuD,EAAO,KACP6D,EAAI,OACJC,EAAM,WACNC,EAAU,KACVC,GACEvH,EACJ,MAAO,CAAC,CACNwH,SAAUD,EACVhE,UACArB,KAAMoF,EACNG,MAAOJ,EACPvD,OAAO4D,EAAAA,EAAAA,IAAmBN,EAAM7D,GAChCe,QAAStE,KAGb,SAAS2H,GAAwB3H,GAC/B,IAAI,QACFuD,EAAO,KACPC,EAAI,OACJ6D,EAAM,YACNO,EAAW,KACXC,EAAI,KACJT,EAAI,KACJG,EAAI,KACJO,GACE9H,EACJ,MAAO,CACL+H,kBAAmBvE,EACnBwE,eAAWC,EACXC,SAAU,CACRb,SACAO,cACAC,OACAtE,UACA4E,aAASF,EACTb,MAAMM,EAAAA,EAAAA,IAAmBN,EAAM7D,GAC/BgE,OACArF,KAAMlC,EAAMoI,YACZX,MAAOzH,EAAMqH,OACbS,QAGN,CACA,IAAIO,GAAgCA,CAACC,EAAajF,IACzC,GAAGkF,OAAOlF,EAAQ,OAAOkF,OAAOD,EAAcjF,EAAQ,MAE/D,SAASmF,GAAOC,EAAOC,GAGrB,IAFA,IAAIC,EAAYF,EAAMpF,OAAS,IAAM,EAAI,IAAIoF,EAAO,GAAKA,EACrDG,EAAS,GACJ7C,EAAI,EAAGA,EAAI2C,IAAS3C,EAC3B6C,EAAS,IAAIA,KAAWD,GAE1B,OAAOC,CACT,CA4CA,SAASC,GAAK5F,GACZ,IAAI,WACF6F,EAAU,OACVC,EAAM,MACN/I,GACEiD,GACA,IACF+F,EAAG,QACHzF,EAAO,SACP0F,GACEjJ,EACJ,IApBF,SAA0B+I,EAAQC,GAChC,OAAc,MAAVD,MAGAC,GAGqB,IAAlBD,EAAO1F,OAChB,CAYO6F,CAAiBH,EAAQC,GAC5B,OAAO,KAOT,IAAI,GACAxG,GACExC,EACJmJ,EAAiBzC,GAAyB1G,EAAOyE,GAC/C2E,GAAUC,EAAAA,EAAAA,IAAUL,GACpBM,GAAYC,EAAAA,EAAAA,GAAsBJ,GAClCK,GAAiBC,EAAAA,EAAAA,IAAYT,GAAK,GAClCU,EAAOX,EAAOpF,IAAI,CAACC,EAAOmC,KAC5B,IAAI4D,EAAWnE,EAAcA,EAAcA,EAAc,CACvDoE,IAAK,OAAOrB,OAAOxC,GACnBjB,EAAG,GACFwE,GAAYE,GAAiB,CAAC,EAAG,CAClC3F,MAAOkC,EACP8D,GAAIjG,EAAMhB,EACVkH,GAAIlG,EAAMO,EACVZ,UACAO,MAAOF,EAAME,MACbQ,QAASV,EAAMU,QACfyE,WAEF,OA9DJ,SAAuBgB,EAAQ/J,GAC7B,IAAIgK,EACJ,GAAiB9J,EAAAA,eAAqB6J,GACpCC,EAAuB9J,EAAAA,aAAmB6J,EAAQ/J,QAC7C,GAAsB,oBAAX+J,EAChBC,EAAUD,EAAO/J,OACZ,CACL,IAAIiK,GAAYC,EAAAA,EAAAA,GAAK,oBAAuC,mBAAXH,EAAuBA,EAAOE,UAAY,IAC3FD,EAAuB9J,EAAAA,cAAoBiK,EAAAA,EAAKnD,GAAS,CAAC,EAAGhH,EAAO,CAClEiK,UAAWA,IAEf,CACA,OAAOD,CACT,CAiDWI,CAAcpB,EAAKW,KAExBU,EAAY,CACdC,SAAUrB,EAAW,iBAAiBV,OAAOa,EAAU,GAAK,SAASb,OAAOO,EAAY,UAAOb,GAEjG,OAAoB/H,EAAAA,cAAoBqK,EAAAA,EAAOvD,GAAS,CACtDiD,UAAW,qBACXL,IAAK,QACJS,GAAYX,EACjB,CACA,SAASc,GAAsBC,GAC7B,IAAI,WACFC,EAAU,SACVC,EAAQ,OACR5B,GACE0B,EACAG,GAAmBC,EAAAA,EAAAA,SAAQ,IACX,OAAX9B,QAA8B,IAAXA,OAAoB,EAASA,EAAOpF,IAAImH,IAChE,IAAIC,EAAU,CACZnI,EAAGkI,EAAMlI,EACTuB,EAAG2G,EAAM3G,EACT6G,MAAO,EACPC,OAAQ,GAEV,OAAOzF,EAAcA,EAAc,CAAC,EAAGuF,GAAU,CAAC,EAAG,CACnDjH,MAAOgH,EAAMhH,MACbQ,QAASwG,EAAMxG,QACfyG,UAKAG,mBAAejD,EACfJ,UAAMI,MAGT,CAACc,IACJ,OAAoB7I,EAAAA,cAAoBiL,EAAAA,GAAmC,CACzErH,MAAO4G,EAAaE,EAAmB,MACtCD,EACL,CACA,SAASS,GAAYC,GACnB,IAAI,WACFvC,EAAU,QACVwC,EAAO,OACPvC,EAAM,gBACNwC,EAAe,MACfvL,GACEqL,GACA,KACAnJ,EAAI,OACJT,EAAM,aACN+J,EAAY,SACZvC,GACEjJ,EACJyL,EAAS/E,GAAyB1G,EAAO0E,GACvCgH,EAAalG,EAAcA,EAAc,CAAC,GAAGiE,EAAAA,EAAAA,IAAYgC,GAAQ,IAAQ,CAAC,EAAG,CAC/E5D,KAAM,OACNoC,UAAW,sBACXK,SAAUrB,EAAW,iBAAiBV,OAAOO,EAAY,UAAOb,EAChEc,SACA7G,OACAT,SACA+J,eACAD,gBAAqC,OAApBA,QAAgD,IAApBA,EAA6BA,EAAkBvL,EAAMuL,kBAEpG,OAAoBrL,EAAAA,cAAoBA,EAAAA,SAAgB,MAAkB,OAAX6I,QAA8B,IAAXA,OAAoB,EAASA,EAAO1F,QAAU,GAAkBnD,EAAAA,cAAoByL,EAAAA,EAAO3E,GAAS,CAAC,EAAG0E,EAAY,CACpMJ,QAASA,KACOpL,EAAAA,cAAoB2I,GAAM,CAC1CE,OAAQA,EACRD,WAAYA,EACZ9I,MAAOA,IAEX,CAQA,SAAS4L,GAAmBC,GAC1B,IAAI,WACF/C,EAAU,MACV9I,EAAK,QACLsL,EAAO,kBACPQ,EAAiB,yBACjBC,GACEF,GACA,OACF9C,EAAM,gBACNwC,EAAe,kBACfS,EAAiB,eACjBC,EAAc,kBACdC,EAAiB,gBACjBC,EAAe,iBACfC,EAAgB,MAChBpB,EAAK,OACLC,EAAM,eACNoB,EAAc,iBACdC,GACEtM,EACAuM,EAAaT,EAAkBU,QAC/BC,GAAcC,EAAAA,EAAAA,GAAe1M,EAAO,mBACnC2M,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCnC,GAAciC,EACdG,GAAqBC,EAAAA,EAAAA,aAAY,KACL,oBAAnBV,GACTA,IAEFO,GAAe,IACd,CAACP,IACAW,GAAuBD,EAAAA,EAAAA,aAAY,KACL,oBAArBT,GACTA,IAEFM,GAAe,IACd,CAACN,IACAhE,EA5CN,SAAwB2E,GACtB,IACE,OAAOA,GAAaA,EAAUC,gBAAkBD,EAAUC,kBAAoB,CAChF,CAAE,MAAOC,GACP,OAAO,CACT,CACF,CAsCoBD,CAAe5B,EAAQkB,SAkBrCY,EAAgBrB,EAAyBS,QAC7C,OAAoBtM,EAAAA,cAAoBsK,GAAuB,CAC7DzB,OAAQA,EACR2B,WAAYA,GACX1K,EAAM2K,SAAuBzK,EAAAA,cAAoBmN,EAAAA,EAAmB,CACrEZ,YAAaA,EACba,MAAOrB,EACPsB,SAAUrB,EACVsB,SAAUxB,EACVyB,OAAQtB,EACRE,eAAgBS,EAChBR,iBAAkBU,EAClBpD,IAAK6C,GACJ1H,IACD,IAEI2I,EAFAC,GAAqBC,EAAAA,EAAAA,IAAYR,EAAe9E,EAAc8E,EAAerI,GAC7E8I,EAAYC,KAAKC,IAAIJ,EAAoBrF,GAE7C,GAAI0D,EACF,GAAIT,EAAiB,CACnB,IAAI9C,EAAQ,GAAGF,OAAOgD,GAAiByC,MAAM,aAAarK,IAAIsK,GAAOC,WAAWD,IAChFP,EA9OiBS,EAAC9K,EAAQiF,EAAaG,KAC7C,IAAI2F,EAAa3F,EAAM4F,OAAO,CAACC,EAAKC,IAASD,EAAMC,GAGnD,IAAKH,EACH,OAAO/F,GAA8BC,EAAajF,GAMpD,IAJA,IAAIqF,EAAQoF,KAAKU,MAAMnL,EAAS+K,GAC5BK,EAAepL,EAAS+K,EACxBM,EAAapG,EAAcjF,EAC3BsL,EAAc,GACT5I,EAAI,EAAG6I,EAAM,EAAG7I,EAAI0C,EAAMpF,OAAQuL,GAAOnG,EAAM1C,KAAMA,EAC5D,GAAI6I,EAAMnG,EAAM1C,GAAK0I,EAAc,CACjCE,EAAc,IAAIlG,EAAMhF,MAAM,EAAGsC,GAAI0I,EAAeG,GACpD,KACF,CAEF,IAAIC,EAAaF,EAAYtL,OAAS,IAAM,EAAI,CAAC,EAAGqL,GAAc,CAACA,GACnE,MAAO,IAAIlG,GAAOC,EAAOC,MAAWiG,KAAgBE,GAAYlL,IAAImL,GAAQ,GAAGvG,OAAOuG,EAAM,OAAOC,KAAK,OA4NzEZ,CAAmBN,EAAWvF,EAAaG,EACtE,MACEiF,EAAyBrF,GAA8BC,EAAauF,QAGtEH,EAA4C,MAAnBnC,OAA0BtD,EAAY7B,OAAOmF,GAExE,GAAIgB,EAAY,CACd,IAAIyC,EAAuBzC,EAAWlJ,OAAS0F,EAAO1F,OAClD4L,EAAiB,IAANlK,EAAUgE,EAASA,EAAOpF,IAAI,CAACC,EAAOC,KACnD,IAAIqL,EAAiBpB,KAAKU,MAAM3K,EAAQmL,GACxC,GAAIzC,EAAW2C,GAAiB,CAC9B,IAAIC,EAAO5C,EAAW2C,GACtB,OAAO1J,EAAcA,EAAc,CAAC,EAAG5B,GAAQ,CAAC,EAAG,CACjDhB,GAAGgL,EAAAA,EAAAA,IAAYuB,EAAKvM,EAAGgB,EAAMhB,EAAGmC,GAChCZ,GAAGyJ,EAAAA,EAAAA,IAAYuB,EAAKhL,EAAGP,EAAMO,EAAGY,IAEpC,CAGA,OACSS,EAAcA,EAAc,CAAC,EAAG5B,GAAQ,CAAC,EAD9CwI,EACiD,CACjDxJ,GAAGgL,EAAAA,EAAAA,IAAoB,EAAR5C,EAAWpH,EAAMhB,EAAGmC,GACnCZ,GAAGyJ,EAAAA,EAAAA,IAAY3C,EAAS,EAAGrH,EAAMO,EAAGY,IAGW,CACjDnC,EAAGgB,EAAMhB,EACTuB,EAAGP,EAAMO,MAKb,OADA2H,EAAkBU,QAAUyC,EACR/O,EAAAA,cAAoBkL,GAAa,CACnDpL,MAAOA,EACP+I,OAAQkG,EACRnG,WAAYA,EACZwC,QAASA,EACTC,gBAAiBmC,GAErB,CAkCA,OAnBI3I,EAAI,GAAKuD,EAAc,IAEzBwD,EAAkBU,QAAUzD,EAe5BgD,EAAyBS,QAAUqB,GAEjB3N,EAAAA,cAAoBkL,GAAa,CACnDpL,MAAOA,EACP+I,OAAQA,EACRD,WAAYA,EACZwC,QAASA,EACTC,gBAAiBmC,MAEJxN,EAAAA,cAAoBkP,EAAAA,GAAwB,CAC3DC,MAAOrP,EAAMqP,QAEjB,CACA,SAASC,GAAYC,GACnB,IAAI,WACFzG,EAAU,MACV9I,GACEuP,EACAzD,GAAoB0D,EAAAA,EAAAA,QAAO,MAC3BzD,GAA2ByD,EAAAA,EAAAA,QAAO,GAClClE,GAAUkE,EAAAA,EAAAA,QAAO,MACrB,OAAoBtP,EAAAA,cAAoB0L,GAAoB,CAC1D5L,MAAOA,EACP8I,WAAYA,EACZgD,kBAAmBA,EACnBC,yBAA0BA,EAC1BT,QAASA,GAEb,CACA,IAAImE,GAA6BA,CAACC,EAAWnM,KACpC,CACLX,EAAG8M,EAAU9M,EACbuB,EAAGuL,EAAUvL,EACbL,MAAO4L,EAAU5L,MAEjB6L,UAAU5L,EAAAA,EAAAA,IAAkB2L,EAAUpL,QAASf,KAKnD,MAAMqM,WAAsBC,EAAAA,UAC1BC,MAAAA,GACE,IAAIC,GACA,KACFxI,EAAI,IACJyB,EAAG,OACHD,EAAM,UACNkB,EAAS,QACTrJ,EAAO,QACPQ,EAAO,IACP4O,EAAG,KACHC,EAAI,MACJjF,EAAK,OACLC,EAAM,GACNzI,EAAE,SACFyG,GACEiH,KAAKlQ,MACT,GAAIuH,EACF,OAAO,KAET,IAAI4I,GAAajG,EAAAA,EAAAA,GAAK,gBAAiBD,GACnCnB,EAAatG,GACb,EACFsC,EAAI,EAAC,YACL8C,EAAc,GACiC,QAA5CmI,GAAetG,EAAAA,EAAAA,IAAYT,GAAK,UAAqC,IAAjB+G,EAA0BA,EAAe,CAChGjL,EAAG,EACH8C,YAAa,GAEXwB,GAAUC,EAAAA,EAAAA,IAAUL,GACpBoH,EAAc,EAAJtL,EAAQ8C,EACtB,OAAoB1H,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBqK,EAAAA,EAAO,CACpGN,UAAWkG,GACVlH,GAAyB/I,EAAAA,cAAoB,OAAQ,KAAmBA,EAAAA,cAAoBmQ,EAAAA,EAAuB,CACpHvH,WAAYA,EACZlI,QAASA,EACTQ,QAASA,KACNgI,GAAwBlJ,EAAAA,cAAoB,WAAY,CAC3DsC,GAAI,iBAAiB+F,OAAOO,IACd5I,EAAAA,cAAoB,OAAQ,CAC1C0C,EAAGqN,EAAOG,EAAU,EACpBjM,EAAG6L,EAAMI,EAAU,EACnBpF,MAAOA,EAAQoF,EACfnF,OAAQA,EAASmF,MACAlQ,EAAAA,cAAoBoQ,EAAAA,GAAoB,CACzD1P,QAASA,EACTQ,QAASA,EACToC,KAAMuF,EACNwH,mBAAoBd,GACpBe,eAAgB,GACFtQ,EAAAA,cAAoBoP,GAAa,CAC/CtP,MAAOkQ,KAAKlQ,MACZ8I,WAAYA,MACK5I,EAAAA,cAAoBuQ,EAAAA,EAAc,CACnDC,UAAWR,KAAKlQ,MAAM0Q,UACtB3H,OAAQA,EACR4H,UAAWT,KAAKlQ,MAAMqH,OACtBuJ,YAAaV,KAAKlQ,MAAMuD,UAE5B,EAEF,IAAIsN,GAAmB,CACrBH,WAAW,EACXtE,kBAAkB,EAClBH,eAAgB,EAChBC,kBAAmB,KACnBC,gBAAiB,OACjBX,cAAc,EACdxC,KAAK,EACLnB,KAAM,OACNN,MAAM,EACNyE,mBAAoB8E,EAAAA,EAAOC,MAC3B1B,OAAO,EACP/H,WAAY,OACZD,OAAQ,UACRO,YAAa,EACbhH,QAAS,EACTQ,QAAS,GAEX,SAAS4P,GAAShR,GAChB,IAAIiR,GAAuBC,EAAAA,EAAAA,GAAoBlR,EAAO6Q,KACpD,UACEH,EAAS,iBACTtE,EAAgB,eAChBH,EAAc,kBACdC,EAAiB,gBACjBC,EAAe,aACfX,EAAY,IACZxC,EAAG,KACHzB,EAAI,kBACJyE,EAAiB,MACjBqD,EAAK,WACL/H,EAAU,QACV1G,EAAO,QACPQ,EAAO,GACPoB,GACEyO,EACJE,EAAiBzK,GAAyBuK,EAAsBtM,IAC9D,SACFsE,IACEmI,EAAAA,EAAAA,GAAaxQ,EAASQ,GACtBiQ,GAAWC,EAAAA,EAAAA,MACX7P,GAAS8P,EAAAA,EAAAA,MACTzQ,GAAa0Q,EAAAA,EAAAA,KACbzI,GAAS0I,EAAAA,EAAAA,GAAe9Q,GAASkC,EAAiBlC,EAAOC,EAASQ,EAASN,EAAY0B,IAC3F,GAAe,eAAXf,GAAsC,aAAXA,GAAmC,MAAVsH,GAA8B,MAAZsI,EAExE,OAAO,KAET,IAAI,OACFpG,EAAM,MACND,EACApI,EAAGqN,EACH9L,EAAG6L,GACDqB,EACJ,OAAoBnR,EAAAA,cAAoB0P,GAAe5I,GAAS,CAAC,EAAGmK,EAAgB,CAClF3O,GAAIA,EACJgJ,aAAcA,EACdxC,IAAKA,EACL0H,UAAWA,EACXtE,iBAAkBA,EAClBH,eAAgBA,EAChBC,kBAAmBA,EACnBC,gBAAiBA,EACjBH,kBAAmBA,EACnBzE,KAAMA,EACN8H,MAAOA,EACP/H,WAAYA,EACZ1G,QAASA,EACTQ,QAASA,EACT2H,OAAQA,EACRtH,OAAQA,EACRwJ,OAAQA,EACRD,MAAOA,EACPiF,KAAMA,EACND,IAAKA,EACL/G,SAAUA,IAEd,CAkDA,SAASyI,GAAOC,GACd,IAAI3R,GAAQkR,EAAAA,EAAAA,GAAoBS,EAAcd,IAC1C/P,GAAa0Q,EAAAA,EAAAA,KACjB,OAAoBtR,EAAAA,cAAoB0R,EAAAA,EAAyB,CAC/DpP,GAAIxC,EAAMwC,GACVN,KAAM,QACLM,GAAmBtC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB2R,EAAAA,EAAkB,CACjHC,cAAe3K,GAAiCnH,KACjCE,EAAAA,cAAoB6R,EAAAA,EAAyB,CAC5DC,GAAIrK,GACJsK,KAAMjS,IACSE,EAAAA,cAAoBgS,EAAAA,EAA2B,CAC9DhQ,KAAM,OACNM,GAAIA,EACJgB,KAAMxD,EAAMwD,KACZ5C,QAASZ,EAAMY,QACfQ,QAASpB,EAAMoB,QACf+Q,QAAS,EACT5O,QAASvD,EAAMuD,QACfgE,KAAMvH,EAAMuH,KACZzG,WAAYA,IACGZ,EAAAA,cAAoB8Q,GAAUhK,GAAS,CAAC,EAAGhH,EAAO,CACjEwC,GAAIA,MAER,CACO,IAAI4P,GAAoBlS,EAAAA,KAAWwR,IAC1CU,GAAKC,YAAc,O,6CC5pBnB,MAofA,GApfyBC,KACvB,MAAOC,EAAMC,IAAW3F,EAAAA,EAAAA,UAAS,CAC/B,CAAErK,GAAI,EAAG4E,KAAM,QAASqL,gBAAiB,GAAKC,MAAO,EAAGC,UAAW,EAAGlL,MAAO,WAC7E,CAAEjF,GAAI,EAAG4E,KAAM,QAASqL,gBAAiB,GAAKC,MAAO,EAAGC,UAAW,EAAGlL,MAAO,WAC7E,CAAEjF,GAAI,EAAG4E,KAAM,QAASqL,gBAAiB,GAAKC,MAAO,EAAGC,UAAW,EAAGlL,MAAO,cAGxEmL,EAAUC,IAAehG,EAAAA,EAAAA,UAAS,YAClCiG,EAAgBC,IAAqBlG,EAAAA,EAAAA,UAAS,MAC9CmG,EAAeC,IAAoBpG,EAAAA,EAAAA,UAAS,MAC5CqG,EAAeC,IAAoBtG,EAAAA,EAAAA,WAAS,IAC5CuG,EAAaC,IAAkBxG,EAAAA,EAAAA,UAAS,IACxCyG,EAAeC,IAAoB1G,EAAAA,EAAAA,UAAS,KAC5C2G,EAASC,IAAc5G,EAAAA,EAAAA,UAAS,KAChC6G,EAAMC,IAAW9G,EAAAA,EAAAA,UAAS,IAC1B+G,EAAmBC,IAAwBhH,EAAAA,EAAAA,WAAS,GAsBrDiH,EAAwBA,CAACnB,EAAWoB,EAAUC,KAClD,MAAMC,EAAQtB,EAAY,EACpBuB,EAAOH,EAAW,EAIlBI,EAAOF,GAASA,EAAQC,GACxBvN,EAAIsN,EAAQC,EAKZE,EADctG,KAAKuG,KAAMJ,EAAQC,GAASvN,EAAIA,GAAKA,EAAI,KACtBmH,KAAKuG,KAAK,GAAK,EAAIL,IAE1D,OAAOlG,KAAKC,IAAI,IAAMoG,EAAOC,IAGzBE,EAAeA,CAACC,EAAKC,KACzB,GAAkB,IAAdD,EAAI7B,MAAa,OAAO+B,IAG5B,OAFaF,EAAI5B,UAAY4B,EAAI7B,MACb5E,KAAKuG,KAAMX,EAAO5F,KAAK4G,IAAIF,GAAeD,EAAI7B,QAgE9DiC,EAAWC,IACf,MAAML,EAAMhC,EAAK5P,KAAKkS,GAAKA,EAAErS,KAAOoS,GAC9BE,EAAYhH,KAAKiH,SAAWR,EAAI9B,gBAChCuC,EAASF,EAAY,EAAI,EAE/BtC,EAAQyC,GACNA,EAAStR,IAAIkR,GACXA,EAAErS,KAAOoS,GAAKpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLqP,GAAC,IAAEnC,MAAOmC,EAAEnC,MAAQ,EAAGC,UAAWkC,EAAElC,WAAamC,EAAY,EAAI,KACtED,IAIR,MAAMK,EAAmBF,EAASlH,KAAKqH,IAAIrC,EAAgBP,EAAKlE,OAAO,CAACO,EAAKiG,IAAMjG,EAAMiG,EAAEnC,MAAO,IAClGW,EAAelE,GAAQA,EAAO+F,GAE9B,MAAMV,EAAajC,EAAKlE,OAAO,CAACO,EAAKiG,IAAMjG,EAAMiG,EAAEnC,MAAO,GAAK,EAC/Da,EAAiBpE,GAAQ,IAAIA,EAAM,CACjCiG,KAAMZ,EACNa,iBAAkBjC,EAAc8B,EAChCX,IAAKA,EAAInN,SAIPkO,EAAWA,KACf,MAAMC,EArFoBC,MAC1B,MAAMhB,EAAajC,EAAKlE,OAAO,CAACO,EAAK2F,IAAQ3F,EAAM2F,EAAI7B,MAAO,GAE9D,OAAQE,GACN,IAAK,UAKH,OAJuBL,EAAK5O,IAAI4Q,IAAG/O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9B+O,GAAG,IACN1Q,MAAOiQ,EAAsBS,EAAI5B,UAAW4B,EAAI7B,MAAQ6B,EAAI5B,UAAWG,MAEnDzE,OAAO,CAACoH,EAAMjJ,IAClCA,EAAQ3I,MAAQ4R,EAAK5R,MAAQ2I,EAAUiJ,GAG3C,IAAK,iBACH,OAAI3H,KAAKiH,SAAWvB,EACXjB,EAAKzE,KAAKU,MAAMV,KAAKiH,SAAWxC,EAAKlP,SAErCkP,EAAKlE,OAAO,CAACoH,EAAMjJ,KACxB,MAAMkJ,EAA0B,IAAfD,EAAK/C,MAAc,EAAI+C,EAAK9C,UAAY8C,EAAK/C,MAE9D,OADsC,IAAlBlG,EAAQkG,MAAc,EAAIlG,EAAQmG,UAAYnG,EAAQkG,OACrDgD,EAAWlJ,EAAUiJ,IAIhD,IAAK,MAKH,OAJkBlD,EAAK5O,IAAI4Q,IAAG/O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzB+O,GAAG,IACNoB,IAAKrB,EAAaC,EAAKC,EAAa,MAErBnG,OAAO,CAACoH,EAAMjJ,IAC7BA,EAAQmJ,IAAMF,EAAKE,IAAMnJ,EAAUiJ,GAGvC,IAAK,WAWH,OAVgBlD,EAAK5O,IAAI4Q,IACvB,MAAMN,EAAQM,EAAI5B,UAAY,EACxBuB,EAAOK,EAAI7B,MAAQ6B,EAAI5B,UAAY,EAEnCiD,EAAK9H,KAAKiH,SACVc,EAAK/H,KAAKiH,SACVe,EAAUhI,KAAKqH,IAAIS,EAAI,EAAE3B,GAASnG,KAAKqH,IAAIU,EAAI,EAAE3B,IACxCpG,KAAKqH,IAAIS,EAAI,EAAE3B,GAASnG,KAAKqH,IAAIU,EAAI,EAAE3B,GAAQpG,KAAKqH,IAAI,EAAES,EAAI,EAAE3B,GAASnG,KAAKqH,IAAI,EAAEU,EAAI,EAAE3B,IACzG,OAAA1O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+O,GAAG,IAAEuB,aAEJzH,OAAO,CAACoH,EAAMjJ,IAC3BA,EAAQsJ,OAASL,EAAKK,OAAStJ,EAAUiJ,GAG7C,IAAK,SACH,OAAOlD,EAAKlE,OAAO,CAACoH,EAAMjJ,KACxB,MAAMkJ,EAA0B,IAAfD,EAAK/C,MAAc,EAAI+C,EAAK9C,UAAY8C,EAAK/C,MAE9D,OADsC,IAAlBlG,EAAQkG,MAAc,GAAMlG,EAAQmG,UAAYnG,EAAQkG,OACvDgD,EAAWlJ,EAAUiJ,IAG9C,QACE,OAAOlD,EAAK,KA6BIiD,GACpBb,EAAQY,EAAY/S,MAGtBuT,EAAAA,EAAAA,WAAU,KACR,IAAIC,EAIJ,OAHI9C,IACF8C,EAAWC,YAAYX,EAAUtC,IAE5B,IAAMkD,cAAcF,IAC1B,CAAC9C,EAAeX,EAAMK,EAAUI,EAAeF,EAAgBU,EAASE,IAE3E,MAgCMc,EAAajC,EAAKlE,OAAO,CAACO,EAAK2F,IAAQ3F,EAAM2F,EAAI7B,MAAO,GAExDyD,EAAW5D,EAAK5O,IAAI4Q,IACxB,MAAMR,EAAWQ,EAAI7B,MAAQ6B,EAAI5B,UACjC,OAAAnN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+O,GAAG,IACN6B,aAAc7B,EAAI7B,MAAQ,GAAK6B,EAAI5B,UAAY4B,EAAI7B,OAAO2D,QAAQ,GAAK,IACvEC,aAAcxC,EAAsBS,EAAI5B,UAAWoB,EAAUjB,GAAgBuD,QAAQ,GACrFE,SAAUhC,EAAI7B,MAAQ,EAAI4B,EAAaC,EAAKC,GAAY6B,QAAQ,GAAK,aAIzE,OACEG,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,sFAAqFU,UAClG8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,qCAAoCU,SAAA,EACjD6L,EAAAA,GAAAA,KAAA,MAAIvM,UAAU,iHAAgHU,SAAC,+CAG/H6L,EAAAA,GAAAA,KAAA,KAAGvM,UAAU,iCAAgCU,SAAC,mEAK9C8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,mEAAkEU,SAAA,EAC/E6L,EAAAA,GAAAA,KAAA,MAAIvM,UAAU,yCAAwCU,SAAC,uBACvD8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,wCAAuCU,SAAA,EACpD8L,EAAAA,GAAAA,MAAA,OAAA9L,SAAA,EACE6L,EAAAA,GAAAA,KAAA,SAAOvM,UAAU,iDAAgDU,SAAC,cAGlE8L,EAAAA,GAAAA,MAAA,UACE3S,MAAO8O,EACP8D,SAAW7R,GAAMgO,EAAYhO,EAAE8R,OAAO7S,OACtCmG,UAAU,+GAA8GU,SAAA,EAExH6L,EAAAA,GAAAA,KAAA,UAAQ1S,MAAM,UAAS6G,SAAC,6BACxB6L,EAAAA,GAAAA,KAAA,UAAQ1S,MAAM,iBAAgB6G,SAAC,mBAC/B6L,EAAAA,GAAAA,KAAA,UAAQ1S,MAAM,MAAK6G,SAAC,kCACpB6L,EAAAA,GAAAA,KAAA,UAAQ1S,MAAM,WAAU6G,SAAC,uBACzB6L,EAAAA,GAAAA,KAAA,UAAQ1S,MAAM,SAAQ6G,SAAC,uBAI3B8L,EAAAA,GAAAA,MAAA,OAAA9L,SAAA,EACE8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,iDAAgDU,SAAA,CAAC,6BAC1CmI,MAExB0D,EAAAA,GAAAA,KAAA,SACEtU,KAAK,QACL6L,IAAI,MACJ6I,IAAI,OACJC,KAAK,OACL/S,MAAOgP,EACP4D,SAAW7R,GAAMkO,EAAkB7E,WAAWrJ,EAAE8R,OAAO7S,QACvDmG,UAAU,YAEZuM,EAAAA,GAAAA,KAAA,KAAGvM,UAAU,6BAA4BU,SAAC,0CAG9B,mBAAbiI,IACC6D,EAAAA,GAAAA,MAAA,OAAA9L,SAAA,EACE8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,iDAAgDU,SAAA,CAAC,8BACzC6I,MAEzBgD,EAAAA,GAAAA,KAAA,SACEtU,KAAK,QACL6L,IAAI,IACJ6I,IAAI,MACJC,KAAK,OACL/S,MAAO0P,EACPkD,SAAW7R,GAAM4O,EAAWvF,WAAWrJ,EAAE8R,OAAO7S,QAChDmG,UAAU,cAKF,QAAb2I,IACC6D,EAAAA,GAAAA,MAAA,OAAA9L,SAAA,EACE8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,iDAAgDU,SAAA,CAAC,6BACrC+I,MAE7B8C,EAAAA,GAAAA,KAAA,SACEtU,KAAK,QACL6L,IAAI,MACJ6I,IAAI,IACJC,KAAK,MACL/S,MAAO4P,EACPgD,SAAW7R,GAAM8O,EAAQzF,WAAWrJ,EAAE8R,OAAO7S,QAC7CmG,UAAU,eAKhBwM,EAAAA,GAAAA,MAAA,OAAA9L,SAAA,EACE8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,iDAAgDU,SAAA,CAAC,oBAC9CqI,EAAc,SAElCwD,EAAAA,GAAAA,KAAA,SACEtU,KAAK,QACL6L,IAAI,MACJ6I,IAAI,OACJC,KAAK,MACL/S,MAAOkP,EACP0D,SAAW7R,GAAMoO,EAAiB6D,SAASjS,EAAE8R,OAAO7S,QACpDmG,UAAU,kBAKhBwM,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,+BAA8BU,SAAA,EAC3C6L,EAAAA,GAAAA,KAAA,UACEO,QAASA,IAAM5D,GAAkBD,GACjCjJ,UAAS,gEAAA1B,OACP2K,EACI,8BACA,mCACHvI,SAEFuI,EAAgB,eAAY,sBAG/BsD,EAAAA,GAAAA,KAAA,UACEO,QAASzB,EACT0B,SAAU9D,EACVjJ,UAAU,kGAAiGU,SAC5G,eAID6L,EAAAA,GAAAA,KAAA,UACEO,QAlKYE,KACtBzE,EAAQyC,GAAYA,EAAStR,IAAI4Q,IAAG/O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU+O,GAAG,IAAE7B,MAAO,EAAGC,UAAW,MACxEU,EAAe,GACfE,EAAiB,IACjBJ,GAAiB,IA+JPlJ,UAAU,8EAA6EU,SACxF,wBAID6L,EAAAA,GAAAA,KAAA,UACEO,QAlKGG,KACb,MAAMC,EAAQrJ,KAAK8I,OAAOrE,EAAK5O,IAAIkR,GAAKA,EAAErS,KAAO,EAC3C4U,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAC5D5E,EAAQ,IAAID,EAAM,CAChB/P,GAAI2U,EACJ/P,KAAK,OAADmB,OAASnC,OAAOiR,aAAa,GAAKF,IACtC1E,gBAAiC,GAAhB3E,KAAKiH,SAAiB,GACvCrC,MAAO,EACPC,UAAW,EACXlL,MAAO2P,EAAOD,EAAQC,EAAO/T,YA0JrB4G,UAAU,kFAAiFU,SAC5F,oBAID8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,0BAAyBU,SAAA,EACxC6L,EAAAA,GAAAA,KAAA,SACEtU,KAAK,WACLoV,QAAS1D,EACT8C,SAAW7R,GAAMgP,EAAqBhP,EAAE8R,OAAOW,SAC/CrN,UAAU,aAEZuM,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,wBAAuBU,SAAC,sCAM9C8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,6CAA4CU,SAAA,EACzD8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,+DAA8DU,SAAA,EAC3E6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,uCAAsCU,SAAC,iBACtD6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,oCAAmCU,SAAE6J,QAEtDiC,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,6DAA4DU,SAAA,EACzE6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,sCAAqCU,SAAC,uBACrD6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,mCAAkCU,SAAEyI,EAAYiD,QAAQ,SAEzEI,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,iEAAgEU,SAAA,EAC7E6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,wCAAuCU,SAAC,oBACvD6L,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,qCAAoCU,SAChD6J,EAAa,GAAKpB,EAAcoB,GAAY6B,QAAQ,GAAK,aAMhEG,EAAAA,GAAAA,KAAA,OAAKvM,UAAU,6CAA4CU,SACxDwL,EAASxS,IAAK4Q,IACbkC,EAAAA,GAAAA,MAAA,OAEExM,UAAU,4EACVsN,MAAO,CAAEC,YAAajD,EAAI9M,OAAQkD,SAAA,EAElC8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,yCAAwCU,SAAA,EACrD6L,EAAAA,GAAAA,KAAA,MAAIvM,UAAU,oBAAoBsN,MAAO,CAAE9P,MAAO8M,EAAI9M,OAAQkD,SAC3D4J,EAAInN,OAENmL,EAAKlP,OAAS,IACbmT,EAAAA,GAAAA,KAAA,UACEO,QAASA,KAAMU,OAvMd7C,EAuMwBL,EAAI/R,QAtMzC+P,EAAKlP,OAAS,GAChBmP,EAAQD,EAAK7P,OAAOmS,GAAKA,EAAErS,KAAOoS,KAFnBA,OAwMD3K,UAAU,4CAA2CU,SACtD,cAMJiJ,IACC6C,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,OAAMU,SAAA,EACnB8L,EAAAA,GAAAA,MAAA,SAAOxM,UAAU,iDAAgDU,SAAA,CAAC,qBAC7C4J,EAAI9B,gBAAgB4D,QAAQ,OAEjDG,EAAAA,GAAAA,KAAA,SACEtU,KAAK,QACL6L,IAAI,IACJ6I,IAAI,IACJC,KAAK,OACL/S,MAAOyQ,EAAI9B,gBACXiE,SAAW7R,IAAM6S,OApNL9C,EAoN0BL,EAAI/R,GApNvBmV,EAoN2BzJ,WAAWrJ,EAAE8R,OAAO7S,YAnNlF0O,EAAQD,EAAK5O,IAAIkR,GACfA,EAAErS,KAAOoS,GAAKpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqP,GAAC,IAAEpC,gBAAiBkF,IAAgB9C,IAFjC6C,IAAC9C,EAAO+C,GAqNnB1N,UAAU,eAKhBwM,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,oBAAmBU,SAAA,EAChC8L,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,uBAAsBU,SAAA,EACnC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,gBAAeU,SAAC,YAChC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,YAAWU,SAAE4J,EAAI7B,YAEnC+D,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,uBAAsBU,SAAA,EACnC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,gBAAeU,SAAC,gBAChC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,YAAWU,SAAE4J,EAAI5B,gBAEnC8D,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,uBAAsBU,SAAA,EACnC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,gBAAeU,SAAC,oBAChC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,YAAWU,SAAE4J,EAAI6B,mBAEnCK,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,gDAA+CU,SAAA,EAC5D6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,gBAAeU,SAAC,oBAChC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,sCAAqCU,SAAE4J,EAAI+B,kBAE/C,QAAb1D,IACC6D,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,8CAA6CU,SAAA,EAC1D6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,gBAAeU,SAAC,gBAChC6L,EAAAA,GAAAA,KAAA,QAAMvM,UAAU,oCAAmCU,SAAE4J,EAAIgC,kBAK/DC,EAAAA,GAAAA,KAAA,UACEO,QAASA,IAAMpC,EAAQJ,EAAI/R,IAC3BwU,SAAU9D,EACVjJ,UAAU,0FACVsN,MAAO,CAAEK,gBAAiBrD,EAAI9M,OAAQkD,SACvC,oBAjEI4J,EAAI/R,OAyEd8Q,EAAcjQ,OAAS,IACtBoT,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,yCAAwCU,SAAA,EACrD6L,EAAAA,GAAAA,KAAA,MAAIvM,UAAU,uCAAsCU,SAAC,iCACrD6L,EAAAA,GAAAA,KAACqB,EAAAA,EAAmB,CAAC7M,MAAM,OAAOC,OAAQ,IAAIN,UAC5C8L,EAAAA,GAAAA,MAAC3W,EAAS,CAAC0D,KAAM8P,EAAc3I,SAAA,EAC7B6L,EAAAA,GAAAA,KAACsB,EAAAA,EAAa,CAACvM,gBAAgB,SAC/BiL,EAAAA,GAAAA,KAACuB,EAAAA,EAAK,CACJxU,QAAQ,OACR8L,MAAO,CAAEvL,MAAO,cAAekU,SAAU,eAAgBC,QAAS,MAEpEzB,EAAAA,GAAAA,KAAC0B,EAAAA,EAAK,CACJ7I,MAAO,CAAEvL,MAAO,oBAAqBqU,OAAQ,GAAIH,SAAU,iBAE7DxB,EAAAA,GAAAA,KAAC4B,EAAAA,EAAO,KACR5B,EAAAA,GAAAA,KAACpE,GAAI,CACHlQ,KAAK,WACLqB,QAAQ,mBACR8D,OAAO,UACPO,YAAa,EACboB,KAAK,aAQfyN,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,oCAAmCU,SAAA,EAChD6L,EAAAA,GAAAA,KAAA,MAAIvM,UAAU,uCAAsCU,SAAC,uBACrD6L,EAAAA,GAAAA,KAACqB,EAAAA,EAAmB,CAAC7M,MAAM,OAAOC,OAAQ,IAAIN,UAC5C8L,EAAAA,GAAAA,MAAC4B,GAAAA,EAAQ,CAAC7U,KAAM2S,EAASxL,SAAA,EACvB6L,EAAAA,GAAAA,KAACsB,EAAAA,EAAa,CAACvM,gBAAgB,SAC/BiL,EAAAA,GAAAA,KAACuB,EAAAA,EAAK,CAACxU,QAAQ,UACfiT,EAAAA,GAAAA,KAAC0B,EAAAA,EAAK,KACN1B,EAAAA,GAAAA,KAAC4B,EAAAA,EAAO,KACR5B,EAAAA,GAAAA,KAAC8B,GAAAA,EAAM,KACP9B,EAAAA,GAAAA,KAAC+B,GAAAA,EAAG,CAAChV,QAAQ,QAAQsE,KAAK,UAAUT,KAAK,iBACzCoP,EAAAA,GAAAA,KAAC+B,GAAAA,EAAG,CAAChV,QAAQ,YAAYsE,KAAK,UAAUT,KAAK,uBAMnDqP,EAAAA,GAAAA,MAAA,OAAKxM,UAAU,8FAA6FU,SAAA,EAC1G8L,EAAAA,GAAAA,MAAA,MAAIxM,UAAU,yCAAwCU,SAAA,CAAC,qBACrB,YAAbiI,EAAyB,gBAA+B,mBAAbA,EAAgC,gBAA0B,QAAbA,EAAqB,MAAqB,aAAbA,EAA0B,oBAAsB,aAE1L6D,EAAAA,GAAAA,MAAA,KAAGxM,UAAU,wBAAuBU,SAAA,CACpB,YAAbiI,GAA0B,6HACb,mBAAbA,GAA6B,sCAAArK,OAA0CiL,EAAO,mEACjE,QAAbZ,GAAkB,4GACL,aAAbA,GAA2B,gGACd,WAAbA,GAAyB,4H","sources":["../node_modules/recharts/es6/chart/LineChart.js","../node_modules/recharts/es6/state/selectors/lineSelectors.js","../node_modules/recharts/es6/cartesian/Line.js","GittinsIndexTool.js"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { arrayTooltipSearcher } from '../state/optionsSlice';\nimport { CartesianChart } from './CartesianChart';\nvar allowedTooltipTypes = ['axis'];\nexport var LineChart = /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(CartesianChart, {\n    chartName: \"LineChart\",\n    defaultTooltipEventType: \"axis\",\n    validateTooltipEventTypes: allowedTooltipTypes,\n    tooltipPayloadSearcher: arrayTooltipSearcher,\n    categoricalChartProps: props,\n    ref: ref\n  });\n});","import { createSelector } from 'reselect';\nimport { computeLinePoints } from '../../cartesian/Line';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectAxisWithScale, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { getBandSizeOfAxis, isCategoricalAxis } from '../../util/ChartUtils';\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\nvar selectBandSize = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks) => {\n  if (isCategoricalAxis(layout, 'xAxis')) {\n    return getBandSizeOfAxis(xAxis, xAxisTicks, false);\n  }\n  return getBandSizeOfAxis(yAxis, yAxisTicks, false);\n});\nvar pickLineId = (_state, _xAxisId, _yAxisId, _isPanorama, id) => id;\nfunction isLineSettings(item) {\n  return item.type === 'line';\n}\n\n/*\n * There is a race condition problem because we read some data from props and some from the state.\n * The state is updated through a dispatch and is one render behind,\n * and so we have this weird one tick render where the displayedData in one selector have the old dataKey\n * but the new dataKey in another selector.\n *\n * So here instead of reading the dataKey from the props, we always read it from the state.\n */\nvar selectSynchronisedLineSettings = createSelector([selectUnfilteredCartesianItems, pickLineId], (graphicalItems, id) => graphicalItems.filter(isLineSettings).find(x => x.id === id));\nexport var selectLinePoints = createSelector([selectChartLayout, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectSynchronisedLineSettings, selectBandSize, selectChartDataWithIndexesIfNotInPanorama], (layout, xAxis, yAxis, xAxisTicks, yAxisTicks, lineSettings, bandSize, _ref) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref;\n  if (lineSettings == null || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || xAxisTicks.length === 0 || yAxisTicks.length === 0 || bandSize == null) {\n    return undefined;\n  }\n  var {\n    dataKey,\n    data\n  } = lineSettings;\n  var displayedData;\n  if (data != null && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n  if (displayedData == null) {\n    return undefined;\n  }\n  return computeLinePoints({\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  });\n});","var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { Component, useCallback, useMemo, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { CartesianLabelListContextProvider, LabelListFromLabelProp } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction LineLabelListProvider(_ref2) {\n  var {\n    showLabels,\n    children,\n    points\n  } = _ref2;\n  var labelListEntries = useMemo(() => {\n    return points === null || points === void 0 ? void 0 : points.map(point => {\n      var viewBox = {\n        x: point.x,\n        y: point.y,\n        width: 0,\n        height: 0\n      };\n      return _objectSpread(_objectSpread({}, viewBox), {}, {\n        value: point.value,\n        payload: point.payload,\n        viewBox,\n        /*\n         * Line is not passing parentViewBox to the LabelList so the labels can escape - looks like a bug, should we pass parentViewBox?\n         * Or should this just be the root chart viewBox?\n         */\n        parentViewBox: undefined,\n        fill: undefined\n      });\n    });\n  }, [points]);\n  return /*#__PURE__*/React.createElement(CartesianLabelListContextProvider, {\n    value: showLabels ? labelListEntries : null\n  }, children);\n}\nfunction StaticCurve(_ref3) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props\n  } = _ref3;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref4) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref4;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var showLabels = !isAnimating;\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(LineLabelListProvider, {\n    points: points,\n    showLabels: showLabels\n  }, props.children, /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    animationId: animationId,\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (isAnimationActive) {\n      if (strokeDasharray) {\n        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n        currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n      } else {\n        currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n      }\n    } else {\n      currentStrokeDasharray = strokeDasharray == null ? undefined : String(strokeDasharray);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      strokeDasharray: currentStrokeDasharray\n    });\n  }), /*#__PURE__*/React.createElement(LabelListFromLabelProp, {\n    label: props.label\n  }));\n}\nfunction RenderCurve(_ref5) {\n  var {\n    clipPathId,\n    props\n  } = _ref5;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n    props: props,\n    clipPathId: clipPathId,\n    previousPointsRef: previousPointsRef,\n    longestAnimatedLengthRef: longestAnimatedLengthRef,\n    pathRef: pathRef\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }))), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref6) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref6;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nfunction LineFn(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nexport var Line = /*#__PURE__*/React.memo(LineFn);\nLine.displayName = 'Line';","import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, ResponsiveContainer } from 'recharts';\n\nconst GittinsIndexTool = () => {\n  const [arms, setArms] = useState([\n    { id: 1, name: 'Arm A', trueProbability: 0.6, pulls: 0, successes: 0, color: '#667eea' },\n    { id: 2, name: 'Arm B', trueProbability: 0.4, pulls: 0, successes: 0, color: '#f093fb' },\n    { id: 3, name: 'Arm C', trueProbability: 0.7, pulls: 0, successes: 0, color: '#4facfe' },\n  ]);\n  \n  const [strategy, setStrategy] = useState('gittins');\n  const [discountFactor, setDiscountFactor] = useState(0.95);\n  const [autoPlaySpeed, setAutoPlaySpeed] = useState(500);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(false);\n  const [totalReward, setTotalReward] = useState(0);\n  const [rewardHistory, setRewardHistory] = useState([]);\n  const [epsilon, setEpsilon] = useState(0.1);\n  const [ucbC, setUcbC] = useState(2);\n  const [showProbabilities, setShowProbabilities] = useState(false);\n  \n  // Beta distribution functions\n  const logGamma = (z) => {\n    if (z < 0.5) {\n      return Math.log(Math.PI) - Math.log(Math.sin(Math.PI * z)) - logGamma(1 - z);\n    }\n    const g = 7;\n    const C = [\n      0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n      771.32342877765313, -176.61502916214059, 12.507343278686905,\n      -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7\n    ];\n    z -= 1;\n    let x = C[0];\n    for (let i = 1; i < g + 2; i++) {\n      x += C[i] / (z + i);\n    }\n    const t = z + g + 0.5;\n    return 0.5 * Math.log(2 * Math.PI) + (z + 0.5) * Math.log(t) - t + Math.log(x);\n  };\n  \n  const calculateGittinsIndex = (successes, failures, gamma) => {\n    const alpha = successes + 1;\n    const beta = failures + 1;\n    \n    // Simplified Gittins index approximation\n    // For Bernoulli bandits with Beta prior\n    const mean = alpha / (alpha + beta);\n    const n = alpha + beta;\n    \n    // Use a calibration approximation\n    // Higher uncertainty and higher mean both increase the index\n    const uncertainty = Math.sqrt((alpha * beta) / (n * n * (n + 1)));\n    const explorationBonus = uncertainty * Math.sqrt(1 / (1 - gamma));\n    \n    return Math.min(0.99, mean + explorationBonus);\n  };\n  \n  const calculateUCB = (arm, totalPulls) => {\n    if (arm.pulls === 0) return Infinity;\n    const mean = arm.successes / arm.pulls;\n    const exploration = Math.sqrt((ucbC * Math.log(totalPulls)) / arm.pulls);\n    return mean + exploration;\n  };\n  \n  const selectArmByStrategy = () => {\n    const totalPulls = arms.reduce((sum, arm) => sum + arm.pulls, 0);\n    \n    switch (strategy) {\n      case 'gittins':\n        const gittinsIndices = arms.map(arm => ({\n          ...arm,\n          index: calculateGittinsIndex(arm.successes, arm.pulls - arm.successes, discountFactor)\n        }));\n        return gittinsIndices.reduce((best, current) => \n          current.index > best.index ? current : best\n        );\n        \n      case 'epsilon-greedy':\n        if (Math.random() < epsilon) {\n          return arms[Math.floor(Math.random() * arms.length)];\n        } else {\n          return arms.reduce((best, current) => {\n            const bestRate = best.pulls === 0 ? 0 : best.successes / best.pulls;\n            const currentRate = current.pulls === 0 ? 0 : current.successes / current.pulls;\n            return currentRate > bestRate ? current : best;\n          });\n        }\n        \n      case 'ucb':\n        const ucbScores = arms.map(arm => ({\n          ...arm,\n          ucb: calculateUCB(arm, totalPulls + 1)\n        }));\n        return ucbScores.reduce((best, current) => \n          current.ucb > best.ucb ? current : best\n        );\n        \n      case 'thompson':\n        const samples = arms.map(arm => {\n          const alpha = arm.successes + 1;\n          const beta = arm.pulls - arm.successes + 1;\n          // Beta distribution sampling approximation\n          const u1 = Math.random();\n          const u2 = Math.random();\n          const sample = (Math.pow(u1, 1/alpha) * Math.pow(u2, 1/beta)) / \n                        (Math.pow(u1, 1/alpha) * Math.pow(u2, 1/beta) + Math.pow(1-u1, 1/alpha) * Math.pow(1-u2, 1/beta));\n          return { ...arm, sample };\n        });\n        return samples.reduce((best, current) => \n          current.sample > best.sample ? current : best\n        );\n        \n      case 'greedy':\n        return arms.reduce((best, current) => {\n          const bestRate = best.pulls === 0 ? 0 : best.successes / best.pulls;\n          const currentRate = current.pulls === 0 ? 0.5 : current.successes / current.pulls;\n          return currentRate > bestRate ? current : best;\n        });\n        \n      default:\n        return arms[0];\n    }\n  };\n  \n  const pullArm = (armId) => {\n    const arm = arms.find(a => a.id === armId);\n    const isSuccess = Math.random() < arm.trueProbability;\n    const reward = isSuccess ? 1 : 0;\n    \n    setArms(prevArms => \n      prevArms.map(a => \n        a.id === armId \n          ? { ...a, pulls: a.pulls + 1, successes: a.successes + (isSuccess ? 1 : 0) }\n          : a\n      )\n    );\n    \n    const discountedReward = reward * Math.pow(discountFactor, arms.reduce((sum, a) => sum + a.pulls, 0));\n    setTotalReward(prev => prev + discountedReward);\n    \n    const totalPulls = arms.reduce((sum, a) => sum + a.pulls, 0) + 1;\n    setRewardHistory(prev => [...prev, { \n      pull: totalPulls, \n      cumulativeReward: totalReward + discountedReward,\n      arm: arm.name\n    }]);\n  };\n  \n  const autoPull = () => {\n    const selectedArm = selectArmByStrategy();\n    pullArm(selectedArm.id);\n  };\n  \n  useEffect(() => {\n    let interval;\n    if (isAutoPlaying) {\n      interval = setInterval(autoPull, autoPlaySpeed);\n    }\n    return () => clearInterval(interval);\n  }, [isAutoPlaying, arms, strategy, autoPlaySpeed, discountFactor, epsilon, ucbC]);\n  \n  const resetSimulation = () => {\n    setArms(prevArms => prevArms.map(arm => ({ ...arm, pulls: 0, successes: 0 })));\n    setTotalReward(0);\n    setRewardHistory([]);\n    setIsAutoPlaying(false);\n  };\n  \n  const addArm = () => {\n    const newId = Math.max(...arms.map(a => a.id)) + 1;\n    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#f9ca24', '#6c5ce7'];\n    setArms([...arms, {\n      id: newId,\n      name: `Arm ${String.fromCharCode(64 + newId)}`,\n      trueProbability: Math.random() * 0.8 + 0.1,\n      pulls: 0,\n      successes: 0,\n      color: colors[newId % colors.length]\n    }]);\n  };\n  \n  const removeArm = (armId) => {\n    if (arms.length > 2) {\n      setArms(arms.filter(a => a.id !== armId));\n    }\n  };\n  \n  const updateArmProbability = (armId, probability) => {\n    setArms(arms.map(a => \n      a.id === armId ? { ...a, trueProbability: probability } : a\n    ));\n  };\n  \n  const totalPulls = arms.reduce((sum, arm) => sum + arm.pulls, 0);\n  \n  const armStats = arms.map(arm => {\n    const failures = arm.pulls - arm.successes;\n    return {\n      ...arm,\n      observedRate: arm.pulls > 0 ? (arm.successes / arm.pulls).toFixed(3) : '-',\n      gittinsIndex: calculateGittinsIndex(arm.successes, failures, discountFactor).toFixed(4),\n      ucbScore: arm.pulls > 0 ? calculateUCB(arm, totalPulls).toFixed(4) : '∞'\n    };\n  });\n  \n  return (\n    <div className=\"w-full p-6 mx-auto max-w-7xl bg-gradient-to-br from-purple-50 to-blue-50 rounded-xl\">\n      <div className=\"p-8 bg-white rounded-lg shadow-2xl\">\n        <h1 className=\"mb-2 text-4xl font-bold text-center text-transparent bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text\">\n          🎰 Multi-Armed Bandit Simulator\n        </h1>\n        <p className=\"mb-8 text-center text-gray-600\">\n          Interactive exploration of Gittins Index and other strategies\n        </p>\n        \n        {/* Strategy Selection */}\n        <div className=\"p-6 mb-6 rounded-lg bg-gradient-to-r from-purple-100 to-blue-100\">\n          <h2 className=\"mb-4 text-xl font-bold text-purple-800\">Strategy Settings</h2>\n          <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n            <div>\n              <label className=\"block mb-2 text-sm font-semibold text-gray-700\">\n                Strategy\n              </label>\n              <select \n                value={strategy}\n                onChange={(e) => setStrategy(e.target.value)}\n                className=\"w-full px-4 py-2 border-2 border-purple-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              >\n                <option value=\"gittins\">Gittins Index (Optimal)</option>\n                <option value=\"epsilon-greedy\">ε-Greedy</option>\n                <option value=\"ucb\">Upper Confidence Bound (UCB)</option>\n                <option value=\"thompson\">Thompson Sampling</option>\n                <option value=\"greedy\">Pure Greedy</option>\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block mb-2 text-sm font-semibold text-gray-700\">\n                Discount Factor (γ): {discountFactor}\n              </label>\n              <input\n                type=\"range\"\n                min=\"0.5\"\n                max=\"0.99\"\n                step=\"0.01\"\n                value={discountFactor}\n                onChange={(e) => setDiscountFactor(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">Higher = value future rewards more</p>\n            </div>\n            \n            {strategy === 'epsilon-greedy' && (\n              <div>\n                <label className=\"block mb-2 text-sm font-semibold text-gray-700\">\n                  Exploration Rate (ε): {epsilon}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"0.5\"\n                  step=\"0.01\"\n                  value={epsilon}\n                  onChange={(e) => setEpsilon(parseFloat(e.target.value))}\n                  className=\"w-full\"\n                />\n              </div>\n            )}\n            \n            {strategy === 'ucb' && (\n              <div>\n                <label className=\"block mb-2 text-sm font-semibold text-gray-700\">\n                  Exploration Constant (C): {ucbC}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.5\"\n                  max=\"5\"\n                  step=\"0.1\"\n                  value={ucbC}\n                  onChange={(e) => setUcbC(parseFloat(e.target.value))}\n                  className=\"w-full\"\n                />\n              </div>\n            )}\n            \n            <div>\n              <label className=\"block mb-2 text-sm font-semibold text-gray-700\">\n                Auto-play Speed: {autoPlaySpeed}ms\n              </label>\n              <input\n                type=\"range\"\n                min=\"100\"\n                max=\"2000\"\n                step=\"100\"\n                value={autoPlaySpeed}\n                onChange={(e) => setAutoPlaySpeed(parseInt(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4 mt-4\">\n            <button\n              onClick={() => setIsAutoPlaying(!isAutoPlaying)}\n              className={`px-6 py-3 rounded-lg font-semibold text-white transition-all ${\n                isAutoPlaying \n                  ? 'bg-red-500 hover:bg-red-600' \n                  : 'bg-green-500 hover:bg-green-600'\n              }`}\n            >\n              {isAutoPlaying ? '⏸ Pause' : '▶ Auto-Play'}\n            </button>\n            \n            <button\n              onClick={autoPull}\n              disabled={isAutoPlaying}\n              className=\"px-6 py-3 font-semibold text-white bg-blue-500 rounded-lg hover:bg-blue-600 disabled:opacity-50\"\n            >\n              Pull Once\n            </button>\n            \n            <button\n              onClick={resetSimulation}\n              className=\"px-6 py-3 font-semibold text-white bg-gray-500 rounded-lg hover:bg-gray-600\"\n            >\n              🔄 Reset\n            </button>\n            \n            <button\n              onClick={addArm}\n              className=\"px-6 py-3 font-semibold text-white bg-purple-500 rounded-lg hover:bg-purple-600\"\n            >\n              ➕ Add Arm\n            </button>\n            \n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={showProbabilities}\n                onChange={(e) => setShowProbabilities(e.target.checked)}\n                className=\"w-4 h-4\"\n              />\n              <span className=\"text-sm font-semibold\">Show True Probabilities</span>\n            </label>\n          </div>\n        </div>\n        \n        {/* Performance Stats */}\n        <div className=\"grid grid-cols-1 gap-4 mb-6 md:grid-cols-3\">\n          <div className=\"p-4 rounded-lg bg-gradient-to-br from-green-100 to-green-200\">\n            <div className=\"text-sm font-semibold text-green-800\">Total Pulls</div>\n            <div className=\"text-3xl font-bold text-green-900\">{totalPulls}</div>\n          </div>\n          <div className=\"p-4 rounded-lg bg-gradient-to-br from-blue-100 to-blue-200\">\n            <div className=\"text-sm font-semibold text-blue-800\">Cumulative Reward</div>\n            <div className=\"text-3xl font-bold text-blue-900\">{totalReward.toFixed(2)}</div>\n          </div>\n          <div className=\"p-4 rounded-lg bg-gradient-to-br from-purple-100 to-purple-200\">\n            <div className=\"text-sm font-semibold text-purple-800\">Average Reward</div>\n            <div className=\"text-3xl font-bold text-purple-900\">\n              {totalPulls > 0 ? (totalReward / totalPulls).toFixed(3) : '-'}\n            </div>\n          </div>\n        </div>\n        \n        {/* Arms Display */}\n        <div className=\"grid grid-cols-1 gap-4 mb-6 md:grid-cols-3\">\n          {armStats.map((arm) => (\n            <div \n              key={arm.id}\n              className=\"p-4 transition-all bg-white border-2 rounded-lg shadow-lg hover:shadow-xl\"\n              style={{ borderColor: arm.color }}\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-xl font-bold\" style={{ color: arm.color }}>\n                  {arm.name}\n                </h3>\n                {arms.length > 2 && (\n                  <button\n                    onClick={() => removeArm(arm.id)}\n                    className=\"font-bold text-red-500 hover:text-red-700\"\n                  >\n                    ✕\n                  </button>\n                )}\n              </div>\n              \n              {showProbabilities && (\n                <div className=\"mb-2\">\n                  <label className=\"block mb-1 text-xs font-semibold text-gray-600\">\n                    True Probability: {arm.trueProbability.toFixed(2)}\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.05\"\n                    value={arm.trueProbability}\n                    onChange={(e) => updateArmProbability(arm.id, parseFloat(e.target.value))}\n                    className=\"w-full\"\n                  />\n                </div>\n              )}\n              \n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Pulls:</span>\n                  <span className=\"font-mono\">{arm.pulls}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Successes:</span>\n                  <span className=\"font-mono\">{arm.successes}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Observed Rate:</span>\n                  <span className=\"font-mono\">{arm.observedRate}</span>\n                </div>\n                <div className=\"flex justify-between p-2 rounded bg-yellow-50\">\n                  <span className=\"font-semibold\">Gittins Index:</span>\n                  <span className=\"font-mono font-bold text-yellow-800\">{arm.gittinsIndex}</span>\n                </div>\n                {strategy === 'ucb' && (\n                  <div className=\"flex justify-between p-2 rounded bg-blue-50\">\n                    <span className=\"font-semibold\">UCB Score:</span>\n                    <span className=\"font-mono font-bold text-blue-800\">{arm.ucbScore}</span>\n                  </div>\n                )}\n              </div>\n              \n              <button\n                onClick={() => pullArm(arm.id)}\n                disabled={isAutoPlaying}\n                className=\"w-full py-2 mt-3 font-semibold text-white transition-all rounded-lg disabled:opacity-50\"\n                style={{ backgroundColor: arm.color }}\n              >\n                Pull This Arm\n              </button>\n            </div>\n          ))}\n        </div>\n        \n        {/* Cumulative Reward Chart */}\n        {rewardHistory.length > 0 && (\n          <div className=\"p-6 mb-6 bg-white rounded-lg shadow-lg\">\n            <h3 className=\"mb-4 text-xl font-bold text-gray-800\">Cumulative Reward Over Time</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={rewardHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"pull\" \n                  label={{ value: 'Pull Number', position: 'insideBottom', offset: -5 }} \n                />\n                <YAxis \n                  label={{ value: 'Cumulative Reward', angle: -90, position: 'insideLeft' }} \n                />\n                <Tooltip />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"cumulativeReward\" \n                  stroke=\"#8884d8\" \n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n        \n        {/* Pull Distribution Chart */}\n        <div className=\"p-6 bg-white rounded-lg shadow-lg\">\n          <h3 className=\"mb-4 text-xl font-bold text-gray-800\">Pull Distribution</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={armStats}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"pulls\" fill=\"#8884d8\" name=\"Total Pulls\" />\n              <Bar dataKey=\"successes\" fill=\"#82ca9d\" name=\"Successes\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        {/* Strategy Explanation */}\n        <div className=\"p-6 mt-6 border-2 border-yellow-300 rounded-lg bg-gradient-to-r from-yellow-50 to-orange-50\">\n          <h3 className=\"mb-2 text-lg font-bold text-yellow-900\">\n            Current Strategy: {strategy === 'gittins' ? 'Gittins Index' : strategy === 'epsilon-greedy' ? 'ε-Greedy' : strategy === 'ucb' ? 'UCB' : strategy === 'thompson' ? 'Thompson Sampling' : 'Greedy'}\n          </h3>\n          <p className=\"text-sm text-gray-700\">\n            {strategy === 'gittins' && '✓ Optimal strategy! Always pulls the arm with highest Gittins Index. Perfectly balances exploration and exploitation.'}\n            {strategy === 'epsilon-greedy' && `Explores randomly with probability ${epsilon}, otherwise exploits the best-known arm. Simple but suboptimal.`}\n            {strategy === 'ucb' && `Pulls the arm with highest upper confidence bound. Good performance but not optimal for Bayesian bandits.`}\n            {strategy === 'thompson' && 'Samples from posterior distributions and pulls the highest sample. Performs well in practice.'}\n            {strategy === 'greedy' && 'Always pulls the arm with highest observed success rate. No exploration - often gets stuck on suboptimal arms.'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GittinsIndexTool;"],"names":["allowedTooltipTypes","LineChart","forwardRef","props","ref","React","CartesianChart","chartName","defaultTooltipEventType","validateTooltipEventTypes","tooltipPayloadSearcher","arrayTooltipSearcher","categoricalChartProps","selectXAxisWithScale","state","xAxisId","_yAxisId","isPanorama","selectAxisWithScale","selectXAxisTicks","selectTicksOfGraphicalItem","selectYAxisWithScale","_xAxisId","yAxisId","selectYAxisTicks","selectBandSize","createSelector","selectChartLayout","layout","xAxis","yAxis","xAxisTicks","yAxisTicks","isCategoricalAxis","getBandSizeOfAxis","isLineSettings","item","type","selectSynchronisedLineSettings","selectUnfilteredCartesianItems","pickLineId","_state","_isPanorama","id","graphicalItems","filter","find","x","selectLinePoints","selectChartDataWithIndexesIfNotInPanorama","lineSettings","bandSize","_ref","chartData","dataStartIndex","dataEndIndex","length","displayedData","dataKey","data","slice","_ref6","map","entry","index","value","getValueByDataKey","getCateCoordinateOfLine","axis","ticks","y","isNullish","scale","payload","Boolean","computeLinePoints","_excluded","_excluded2","_excluded3","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","i","Symbol","toPrimitive","call","TypeError","String","Number","_toPrimitive","_toPropertyKey","configurable","writable","_objectWithoutProperties","n","hasOwnProperty","indexOf","_objectWithoutPropertiesLoose","propertyIsEnumerable","_extends","assign","bind","computeLegendPayloadFromAreaData","name","stroke","legendType","hide","inactive","color","getTooltipNameProp","getTooltipEntrySettings","strokeWidth","fill","unit","dataDefinedOnItem","positions","undefined","settings","nameKey","tooltipType","generateSimpleStrokeDasharray","totalLength","concat","repeat","lines","count","linesUnit","result","Dots","clipPathId","points","dot","needClip","shouldRenderDots","propsWithoutId","clipDot","isClipDot","lineProps","svgPropertiesNoEvents","customDotProps","filterProps","dots","dotProps","key","cx","cy","option","dotItem","className","clsx","Dot","renderDotItem","dotsProps","clipPath","Layer","LineLabelListProvider","_ref2","showLabels","children","labelListEntries","useMemo","point","viewBox","width","height","parentViewBox","CartesianLabelListContextProvider","StaticCurve","_ref3","pathRef","strokeDasharray","connectNulls","others","curveProps","Curve","CurveWithAnimation","_ref4","previousPointsRef","longestAnimatedLengthRef","isAnimationActive","animationBegin","animationDuration","animationEasing","animateNewValues","onAnimationEnd","onAnimationStart","prevPoints","current","animationId","useAnimationId","isAnimating","setIsAnimating","useState","handleAnimationEnd","useCallback","handleAnimationStart","mainCurve","getTotalLength","_unused","startingPoint","JavascriptAnimate","begin","duration","isActive","easing","currentStrokeDasharray","lengthInterpolated","interpolate","curLength","Math","min","split","num","parseFloat","getStrokeDasharray","lineLength","reduce","pre","next","floor","remainLength","restLength","remainLines","sum","emptyLines","line","join","prevPointsDiffFactor","stepData","prevPointIndex","prev","LabelListFromLabelProp","label","RenderCurve","_ref5","useRef","errorBarDataPointFormatter","dataPoint","errorVal","LineWithState","Component","render","_filterProps","top","left","this","layerClass","dotSize","GraphicalItemClipPath","SetErrorBarContext","dataPointFormatter","errorBarOffset","ActivePoints","activeDot","mainColor","itemDataKey","defaultLineProps","Global","isSsr","LineImpl","_resolveDefaultProps","resolveDefaultProps","everythingElse","useNeedsClip","plotArea","usePlotArea","useChartLayout","useIsPanorama","useAppSelector","LineFn","outsideProps","RegisterGraphicalItemId","SetLegendPayload","legendPayload","SetTooltipEntrySettings","fn","args","SetCartesianGraphicalItem","zAxisId","Line","displayName","GittinsIndexTool","arms","setArms","trueProbability","pulls","successes","strategy","setStrategy","discountFactor","setDiscountFactor","autoPlaySpeed","setAutoPlaySpeed","isAutoPlaying","setIsAutoPlaying","totalReward","setTotalReward","rewardHistory","setRewardHistory","epsilon","setEpsilon","ucbC","setUcbC","showProbabilities","setShowProbabilities","calculateGittinsIndex","failures","gamma","alpha","beta","mean","explorationBonus","sqrt","calculateUCB","arm","totalPulls","Infinity","log","pullArm","armId","a","isSuccess","random","reward","prevArms","discountedReward","pow","pull","cumulativeReward","autoPull","selectedArm","selectArmByStrategy","best","bestRate","ucb","u1","u2","sample","useEffect","interval","setInterval","clearInterval","armStats","observedRate","toFixed","gittinsIndex","ucbScore","_jsx","_jsxs","onChange","target","max","step","parseInt","onClick","disabled","resetSimulation","addArm","newId","colors","fromCharCode","checked","style","borderColor","removeArm","updateArmProbability","probability","backgroundColor","ResponsiveContainer","CartesianGrid","XAxis","position","offset","YAxis","angle","Tooltip","BarChart","Legend","Bar"],"sourceRoot":""}